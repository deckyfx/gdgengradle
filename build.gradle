buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.10"
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'java-gradle-plugin'

// Apply other plugins here, e.g. java plugin for a plugin written in java or
// the groovy plugin for a plugin written in groovy

// If your plugin has any external java dependencies, Gradle will attempt to
// downloaded them from JCenter for anyone using the plugins DSL
// so you should probably use JCenter for dependency resolution in your own
// project

group 'com.github.deckyfx'
version '1.0.2'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('repo'))
        }
    }
}

pluginBundle {
    website = 'https://github.com/deckyfx/gdgengradle'
    vcsUrl = 'https://github.com/deckyfx/gdgengradle'

    plugins {
        gradletestPlugin {
            id = 'com.github.deckyfx.gdgengradle'
            displayName = 'Create greendao3 Model automatically on build'
            description = 'Create greendao3 Model automatically on build its read from JSON file schema, and also handle version upgrade migration'
            tags = ['qlite','greendao','model', 'android']
            version = version
        }
    }
}

configurations {
    releaseJars
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.deckyfx.gdgen.GeneratorExecutable'
        attributes 'Class-Path': 'arts/'
    }
    from('src/main/resources') {
        include '*.ftl'
        include '*.json'
    }
    from {
        configurations.releaseJars.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation gradleApi()
    implementation localGroovy()

    testImplementation 'junit:junit:4.12'

    releaseJars 'com.google.code.gson:gson:2.8.2'
    releaseJars 'org.freemarker:freemarker:2.3.26-incubating'
}